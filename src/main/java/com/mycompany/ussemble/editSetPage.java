/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.ussemble;

import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import javax.swing.JFileChooser;
import javax.swing.filechooser.FileNameExtensionFilter;

/**
 *
 * @author ACER
 */
public class editSetPage extends javax.swing.JFrame {

    /**
     * Creates new form 
     */
    public editSetPage() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        buttonGroup1 = new javax.swing.ButtonGroup();
        jOptionPane2 = new javax.swing.JOptionPane();
        backgroundPanel = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        sidebarPanel = new javax.swing.JPanel();
        overviewBtn = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        flashcardsBtn = new javax.swing.JButton();
        studyBtn = new javax.swing.JButton();
        profileIcon = new javax.swing.JButton();
        flashcardsIcon = new javax.swing.JButton();
        overviewIcon = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();
        profileBtn = new javax.swing.JButton();
        logOutIcon = new javax.swing.JButton();
        logOutBtn = new javax.swing.JButton();
        logOutIcon1 = new javax.swing.JButton();
        addNewSetPanel = new javax.swing.JPanel();
        displayQuestion = new javax.swing.JTextField();
        displayTitle = new javax.swing.JTextField();
        chooseSetBtn = new javax.swing.JButton();
        editSetTitleBtn = new javax.swing.JButton();
        editQuestionBtn = new javax.swing.JButton();
        editAnswerBtn = new javax.swing.JButton();
        displayAnswer = new javax.swing.JTextField();
        editDifficulty = new javax.swing.JButton();
        displayDifficulty = new javax.swing.JTextField();
        discardEditsBTn = new javax.swing.JButton();
        editNextCardBtn = new javax.swing.JButton();
        saveEditsBTn = new javax.swing.JButton();
        editSetHeaderPanel = new javax.swing.JPanel();
        editSetLabel = new javax.swing.JTextField();
        backFlashcardsBtn = new javax.swing.JButton();
        finishSetBtn = new javax.swing.JButton();
        editNextCardBtn1 = new javax.swing.JButton();

        jButton1.setText("jButton1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        backgroundPanel.setBackground(new java.awt.Color(255, 255, 255));
        backgroundPanel.setForeground(new java.awt.Color(0, 55, 158));
        backgroundPanel.setMaximumSize(new java.awt.Dimension(960, 540));
        backgroundPanel.setPreferredSize(new java.awt.Dimension(960, 540));

        sidebarPanel.setBackground(new java.awt.Color(229, 238, 255));

        overviewBtn.setBackground(new java.awt.Color(229, 238, 255));
        overviewBtn.setFont(new java.awt.Font("Inter", 0, 12)); // NOI18N
        overviewBtn.setForeground(new java.awt.Color(0, 55, 158));
        overviewBtn.setText("Overview");
        overviewBtn.setBorder(null);
        overviewBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                overviewBtnActionPerformed(evt);
            }
        });

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/aaa new logo final.png"))); // NOI18N

        flashcardsBtn.setBackground(new java.awt.Color(0, 55, 158));
        flashcardsBtn.setFont(new java.awt.Font("Inter", 0, 12)); // NOI18N
        flashcardsBtn.setForeground(new java.awt.Color(229, 238, 255));
        flashcardsBtn.setText("Flashcards");
        flashcardsBtn.setBorder(null);
        flashcardsBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                flashcardsBtnActionPerformed(evt);
            }
        });

        studyBtn.setBackground(new java.awt.Color(229, 238, 255));
        studyBtn.setFont(new java.awt.Font("Inter", 0, 12)); // NOI18N
        studyBtn.setForeground(new java.awt.Color(0, 55, 158));
        studyBtn.setText("Study");
        studyBtn.setBorder(null);
        studyBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                studyBtnActionPerformed(evt);
            }
        });

        profileIcon.setBackground(new java.awt.Color(255, 255, 204));
        profileIcon.setFont(new java.awt.Font("Inter", 0, 14)); // NOI18N
        profileIcon.setForeground(new java.awt.Color(0, 55, 158));
        profileIcon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/studyIcon.png"))); // NOI18N
        profileIcon.setBorder(null);
        profileIcon.setBorderPainted(false);
        profileIcon.setContentAreaFilled(false);
        profileIcon.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                profileIconActionPerformed(evt);
            }
        });

        flashcardsIcon.setBackground(new java.awt.Color(255, 255, 204));
        flashcardsIcon.setFont(new java.awt.Font("Inter", 0, 14)); // NOI18N
        flashcardsIcon.setForeground(new java.awt.Color(0, 55, 158));
        flashcardsIcon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/aaa flashcards.png"))); // NOI18N
        flashcardsIcon.setBorder(null);
        flashcardsIcon.setBorderPainted(false);
        flashcardsIcon.setContentAreaFilled(false);
        flashcardsIcon.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                flashcardsIconActionPerformed(evt);
            }
        });

        overviewIcon.setBackground(new java.awt.Color(255, 255, 204));
        overviewIcon.setFont(new java.awt.Font("Inter", 0, 14)); // NOI18N
        overviewIcon.setForeground(new java.awt.Color(0, 55, 158));
        overviewIcon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/homeIcon.png"))); // NOI18N
        overviewIcon.setBorder(null);
        overviewIcon.setBorderPainted(false);
        overviewIcon.setContentAreaFilled(false);
        overviewIcon.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                overviewIconActionPerformed(evt);
            }
        });

        jSeparator1.setForeground(new java.awt.Color(0, 55, 158));

        profileBtn.setBackground(new java.awt.Color(229, 238, 255));
        profileBtn.setFont(new java.awt.Font("Inter", 0, 12)); // NOI18N
        profileBtn.setForeground(new java.awt.Color(0, 55, 158));
        profileBtn.setText("Profile");
        profileBtn.setBorder(null);
        profileBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                profileBtnActionPerformed(evt);
            }
        });

        logOutIcon.setBackground(new java.awt.Color(255, 255, 204));
        logOutIcon.setFont(new java.awt.Font("Inter", 0, 14)); // NOI18N
        logOutIcon.setForeground(new java.awt.Color(0, 55, 158));
        logOutIcon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/aaa profile.png"))); // NOI18N
        logOutIcon.setBorder(null);
        logOutIcon.setBorderPainted(false);
        logOutIcon.setContentAreaFilled(false);
        logOutIcon.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                logOutIconActionPerformed(evt);
            }
        });

        logOutBtn.setBackground(new java.awt.Color(229, 238, 255));
        logOutBtn.setFont(new java.awt.Font("Inter", 0, 12)); // NOI18N
        logOutBtn.setForeground(new java.awt.Color(0, 55, 158));
        logOutBtn.setText("Log Out");
        logOutBtn.setBorder(null);
        logOutBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                logOutBtnActionPerformed(evt);
            }
        });

        logOutIcon1.setBackground(new java.awt.Color(255, 255, 204));
        logOutIcon1.setFont(new java.awt.Font("Inter", 0, 14)); // NOI18N
        logOutIcon1.setForeground(new java.awt.Color(0, 55, 158));
        logOutIcon1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/aaa log out button.png"))); // NOI18N
        logOutIcon1.setBorder(null);
        logOutIcon1.setBorderPainted(false);
        logOutIcon1.setContentAreaFilled(false);
        logOutIcon1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                logOutIcon1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout sidebarPanelLayout = new javax.swing.GroupLayout(sidebarPanel);
        sidebarPanel.setLayout(sidebarPanelLayout);
        sidebarPanelLayout.setHorizontalGroup(
            sidebarPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(sidebarPanelLayout.createSequentialGroup()
                .addGap(39, 39, 39)
                .addGroup(sidebarPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, sidebarPanelLayout.createSequentialGroup()
                        .addGroup(sidebarPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jSeparator1, javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(sidebarPanelLayout.createSequentialGroup()
                                .addGroup(sidebarPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(flashcardsIcon, javax.swing.GroupLayout.DEFAULT_SIZE, 42, Short.MAX_VALUE)
                                    .addComponent(profileIcon, javax.swing.GroupLayout.DEFAULT_SIZE, 42, Short.MAX_VALUE)
                                    .addComponent(logOutIcon, javax.swing.GroupLayout.DEFAULT_SIZE, 42, Short.MAX_VALUE)
                                    .addComponent(logOutIcon1, javax.swing.GroupLayout.DEFAULT_SIZE, 42, Short.MAX_VALUE)
                                    .addComponent(overviewIcon, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(sidebarPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, sidebarPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addComponent(flashcardsBtn, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 128, Short.MAX_VALUE)
                                        .addComponent(overviewBtn, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                    .addComponent(studyBtn, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(profileBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(logOutBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(20, 20, 20)))
                .addGap(30, 30, 30))
        );
        sidebarPanelLayout.setVerticalGroup(
            sidebarPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(sidebarPanelLayout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 12, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(sidebarPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(overviewIcon, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(overviewBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(sidebarPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(flashcardsBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(flashcardsIcon, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(sidebarPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(studyBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(profileIcon, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(sidebarPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(sidebarPanelLayout.createSequentialGroup()
                        .addComponent(logOutIcon, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(logOutIcon1, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(sidebarPanelLayout.createSequentialGroup()
                        .addComponent(profileBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(logOutBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(286, Short.MAX_VALUE))
        );

        addNewSetPanel.setBackground(new java.awt.Color(255, 255, 255));

        displayQuestion.setFont(new java.awt.Font("Inter", 0, 12)); // NOI18N
        displayQuestion.setForeground(new java.awt.Color(0, 55, 158));

        displayTitle.setFont(new java.awt.Font("Inter", 0, 12)); // NOI18N
        displayTitle.setForeground(new java.awt.Color(0, 55, 158));
        displayTitle.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                displayTitleActionPerformed(evt);
            }
        });

        chooseSetBtn.setBackground(new java.awt.Color(255, 255, 204));
        chooseSetBtn.setFont(new java.awt.Font("Inter", 0, 12)); // NOI18N
        chooseSetBtn.setForeground(new java.awt.Color(0, 55, 158));
        chooseSetBtn.setText("Open Folder to Choose A Set");
        chooseSetBtn.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        chooseSetBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chooseSetBtnActionPerformed(evt);
            }
        });

        editSetTitleBtn.setFont(new java.awt.Font("Inter", 0, 12)); // NOI18N
        editSetTitleBtn.setForeground(new java.awt.Color(0, 55, 158));
        editSetTitleBtn.setText("Edit Set Title");
        editSetTitleBtn.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        editSetTitleBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editSetTitleBtnActionPerformed(evt);
            }
        });

        editQuestionBtn.setFont(new java.awt.Font("Inter", 0, 12)); // NOI18N
        editQuestionBtn.setForeground(new java.awt.Color(0, 55, 158));
        editQuestionBtn.setText("Edit Question");
        editQuestionBtn.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        editQuestionBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editQuestionBtnActionPerformed(evt);
            }
        });

        editAnswerBtn.setFont(new java.awt.Font("Inter", 0, 12)); // NOI18N
        editAnswerBtn.setForeground(new java.awt.Color(0, 55, 158));
        editAnswerBtn.setText("Edit Answer");
        editAnswerBtn.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        editAnswerBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editAnswerBtnActionPerformed(evt);
            }
        });

        displayAnswer.setFont(new java.awt.Font("Inter", 0, 12)); // NOI18N
        displayAnswer.setForeground(new java.awt.Color(0, 55, 158));

        editDifficulty.setFont(new java.awt.Font("Inter", 0, 12)); // NOI18N
        editDifficulty.setForeground(new java.awt.Color(0, 55, 158));
        editDifficulty.setText("Difficulty");
        editDifficulty.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        editDifficulty.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editDifficultyActionPerformed(evt);
            }
        });

        displayDifficulty.setFont(new java.awt.Font("Inter", 0, 12)); // NOI18N
        displayDifficulty.setForeground(new java.awt.Color(0, 55, 158));
        displayDifficulty.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                displayDifficultyActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout addNewSetPanelLayout = new javax.swing.GroupLayout(addNewSetPanel);
        addNewSetPanel.setLayout(addNewSetPanelLayout);
        addNewSetPanelLayout.setHorizontalGroup(
            addNewSetPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, addNewSetPanelLayout.createSequentialGroup()
                .addContainerGap(63, Short.MAX_VALUE)
                .addGroup(addNewSetPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(chooseSetBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 553, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(addNewSetPanelLayout.createSequentialGroup()
                        .addGroup(addNewSetPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(editSetTitleBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(editQuestionBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(editAnswerBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(editDifficulty, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(addNewSetPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(displayQuestion, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 375, Short.MAX_VALUE)
                            .addComponent(displayTitle, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(displayAnswer, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 375, Short.MAX_VALUE)
                            .addComponent(displayDifficulty, javax.swing.GroupLayout.DEFAULT_SIZE, 375, Short.MAX_VALUE))))
                .addGap(61, 61, 61))
        );
        addNewSetPanelLayout.setVerticalGroup(
            addNewSetPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(addNewSetPanelLayout.createSequentialGroup()
                .addComponent(chooseSetBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(26, 26, 26)
                .addGroup(addNewSetPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(editSetTitleBtn, javax.swing.GroupLayout.DEFAULT_SIZE, 32, Short.MAX_VALUE)
                    .addComponent(displayTitle))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(addNewSetPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(displayQuestion, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(editQuestionBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(addNewSetPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(displayAnswer, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(editAnswerBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(addNewSetPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(editDifficulty, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(displayDifficulty, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        displayTitle.setEnabled(false);
        displayDifficulty.setEnabled(false);
        editQuestionBtn.setEnabled(false);
        editAnswerBtn.setEnabled(false);

        discardEditsBTn.setBackground(new java.awt.Color(229, 238, 255));
        discardEditsBTn.setFont(new java.awt.Font("Inter", 0, 12)); // NOI18N
        discardEditsBTn.setForeground(new java.awt.Color(0, 55, 158));
        discardEditsBTn.setText("Discard Edits");
        discardEditsBTn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                discardEditsBTnActionPerformed(evt);
            }
        });

        editNextCardBtn.setBackground(new java.awt.Color(255, 255, 204));
        editNextCardBtn.setFont(new java.awt.Font("Inter", 0, 12)); // NOI18N
        editNextCardBtn.setForeground(new java.awt.Color(0, 55, 158));
        editNextCardBtn.setText("Edit Next Card");
        editNextCardBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editNextCardBtnActionPerformed(evt);
            }
        });

        saveEditsBTn.setBackground(new java.awt.Color(229, 238, 255));
        saveEditsBTn.setFont(new java.awt.Font("Inter", 0, 12)); // NOI18N
        saveEditsBTn.setForeground(new java.awt.Color(0, 55, 158));
        saveEditsBTn.setText("Save Edits");
        saveEditsBTn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveEditsBTnActionPerformed(evt);
            }
        });

        editSetHeaderPanel.setBackground(new java.awt.Color(255, 255, 255));

        editSetLabel.setFont(new java.awt.Font("Inter", 1, 36)); // NOI18N
        editSetLabel.setForeground(new java.awt.Color(0, 55, 158));
        editSetLabel.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        editSetLabel.setText("Edit Set");
        editSetLabel.setBorder(null);

        backFlashcardsBtn.setBackground(new java.awt.Color(229, 238, 255));
        backFlashcardsBtn.setFont(new java.awt.Font("Inter", 0, 12)); // NOI18N
        backFlashcardsBtn.setForeground(new java.awt.Color(0, 55, 158));
        backFlashcardsBtn.setText("Back to Flashcards");
        backFlashcardsBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backFlashcardsBtnActionPerformed(evt);
            }
        });

        finishSetBtn.setBackground(new java.awt.Color(0, 55, 158));
        finishSetBtn.setFont(new java.awt.Font("Inter", 0, 12)); // NOI18N
        finishSetBtn.setForeground(new java.awt.Color(229, 238, 255));
        finishSetBtn.setText("Finish Editing");
        finishSetBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                finishSetBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout editSetHeaderPanelLayout = new javax.swing.GroupLayout(editSetHeaderPanel);
        editSetHeaderPanel.setLayout(editSetHeaderPanelLayout);
        editSetHeaderPanelLayout.setHorizontalGroup(
            editSetHeaderPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(editSetHeaderPanelLayout.createSequentialGroup()
                .addGap(70, 70, 70)
                .addComponent(editSetLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 246, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(backFlashcardsBtn)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(finishSetBtn, javax.swing.GroupLayout.DEFAULT_SIZE, 146, Short.MAX_VALUE)
                .addGap(60, 60, 60))
        );
        editSetHeaderPanelLayout.setVerticalGroup(
            editSetHeaderPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, editSetHeaderPanelLayout.createSequentialGroup()
                .addContainerGap(33, Short.MAX_VALUE)
                .addGroup(editSetHeaderPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(editSetLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(editSetHeaderPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(finishSetBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(backFlashcardsBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))))
        );

        editNextCardBtn1.setBackground(new java.awt.Color(255, 255, 204));
        editNextCardBtn1.setFont(new java.awt.Font("Inter", 0, 12)); // NOI18N
        editNextCardBtn1.setForeground(new java.awt.Color(0, 55, 158));
        editNextCardBtn1.setText("Edit Previous Card");
        editNextCardBtn1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editNextCardBtn1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout backgroundPanelLayout = new javax.swing.GroupLayout(backgroundPanel);
        backgroundPanel.setLayout(backgroundPanelLayout);
        backgroundPanelLayout.setHorizontalGroup(
            backgroundPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(backgroundPanelLayout.createSequentialGroup()
                .addGroup(backgroundPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(backgroundPanelLayout.createSequentialGroup()
                        .addComponent(sidebarPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(backgroundPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(backgroundPanelLayout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(backgroundPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(editSetHeaderPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(addNewSetPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                            .addGroup(backgroundPanelLayout.createSequentialGroup()
                                .addGap(74, 74, 74)
                                .addGroup(backgroundPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(discardEditsBTn, javax.swing.GroupLayout.PREFERRED_SIZE, 281, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(editNextCardBtn1, javax.swing.GroupLayout.PREFERRED_SIZE, 281, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(backgroundPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(editNextCardBtn, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 265, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(saveEditsBTn, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 265, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                    .addGroup(backgroundPanelLayout.createSequentialGroup()
                        .addGap(8, 8, 8)
                        .addComponent(jLabel3)))
                .addContainerGap(12, Short.MAX_VALUE))
        );
        backgroundPanelLayout.setVerticalGroup(
            backgroundPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(backgroundPanelLayout.createSequentialGroup()
                .addComponent(sidebarPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, Short.MAX_VALUE)
                .addComponent(jLabel3))
            .addGroup(backgroundPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(editSetHeaderPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(32, 32, 32)
                .addComponent(addNewSetPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(backgroundPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(discardEditsBTn, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(saveEditsBTn, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(backgroundPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(editNextCardBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(editNextCardBtn1, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        sidebarPanel.getAccessibleContext().setAccessibleName("sideBar");
        addNewSetPanel.getAccessibleContext().setAccessibleName("");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(backgroundPanel, javax.swing.GroupLayout.Alignment.TRAILING, 966, 966, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addComponent(backgroundPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0))
        );

        backgroundPanel.getAccessibleContext().setAccessibleName("");

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void overviewBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_overviewBtnActionPerformed
        // TODO add your handling code here:
        OverviewPage overview = new OverviewPage();
        overview.setVisible(true);
        setVisible(false);
    }//GEN-LAST:event_overviewBtnActionPerformed

    private void flashcardsBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_flashcardsBtnActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_flashcardsBtnActionPerformed

    private void studyBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_studyBtnActionPerformed
        // TODO add your handling code here:
        studySetPage study = new studySetPage();
        study.setVisible(true);
        setVisible(false);
    }//GEN-LAST:event_studyBtnActionPerformed

    private void profileIconActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_profileIconActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_profileIconActionPerformed

    private void flashcardsIconActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_flashcardsIconActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_flashcardsIconActionPerformed

    private void overviewIconActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_overviewIconActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_overviewIconActionPerformed

    private void profileBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_profileBtnActionPerformed
        // TODO add your handling code here:
        ProfilePage profile = new ProfilePage();
        profile.setVisible(true);
        setVisible(false);
    }//GEN-LAST:event_profileBtnActionPerformed

    private void logOutIconActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_logOutIconActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_logOutIconActionPerformed

    private void displayTitleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_displayTitleActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_displayTitleActionPerformed


    private void discardEditsBTnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_discardEditsBTnActionPerformed
    displayQuestion.setText(originalQuestion);
    displayAnswer.setText(originalAnswer);
    displayDifficulty.setText(originalDifficulty);
    
    // Optionally, you can display a message that the changes were discarded
    jOptionPane2.showMessageDialog(null, "Changes discarded.");
    }//GEN-LAST:event_discardEditsBTnActionPerformed

   
    private void editNextCardBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editNextCardBtnActionPerformed
        if (cards != null && currentCardIndex < cards.length - 1) {
        currentCardIndex++; // Move to the next card
        loadCardContent(cards[currentCardIndex]); // Load the next card
    } else {
        jOptionPane2.showMessageDialog(null, "You are at the last card.");
    }
    }//GEN-LAST:event_editNextCardBtnActionPerformed
    
    private File selectedFile;  // This will store the file selected by the user
    private String[] cards;  // Array to hold the cards
    private int currentCardIndex = 0;
    private void chooseSetBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chooseSetBtnActionPerformed
        
    String documentsPath = "Documents\\NetBeansProjects\\Ussemble\\Flashcards\\" + Login.currentUsername;
    String downloadsPath = "Downloads\\Ussemble\\Flashcards\\" + Login.currentUsername;
    String userHomePath = System.getProperty("user.home"); // Gets the user's home directory

    // Construct both folder paths
    File documentsFolder = new File(userHomePath, documentsPath);
    File downloadsFolder = new File(userHomePath, downloadsPath);

    // Use Documents folder if it exists, fallback to Downloads folder otherwise
    File userFolder;
    if (documentsFolder.exists()) {
        userFolder = documentsFolder;
        System.out.println("Using Documents folder: " + userFolder.getAbsolutePath());
    } else {
        // Ensure Downloads folder exists
        userFolder = downloadsFolder;
        if (!downloadsFolder.exists()) {
            if (downloadsFolder.mkdirs()) {
                System.out.println("Fallback folder created at: " + downloadsFolder.getAbsolutePath());
            } else {
                System.err.println("Failed to create fallback folder. Using home directory instead.");
                userFolder = new File(userHomePath); // Fallback to home directory
            }
        }
    }

    // Configure file chooser
    JFileChooser fileChooser = new JFileChooser(userFolder);
    fileChooser.setFileFilter(new FileNameExtensionFilter("Text Files (.txt, .csv)", "txt", "csv"));
    fileChooser.setAcceptAllFileFilterUsed(true);

    int result = fileChooser.showOpenDialog(null);

    if (result == JFileChooser.APPROVE_OPTION) {
        selectedFile = fileChooser.getSelectedFile(); // Save the selected file
        String fileName = selectedFile.getName(); // Get the name of the file

        try (BufferedReader reader = new BufferedReader(new FileReader(selectedFile))) {
            StringBuilder fileContent = new StringBuilder();
            String line;
            while ((line = reader.readLine()) != null) {
                fileContent.append(line).append("\n");
            }

            // Set the title of the deck to the file name (without the extension)
            displayTitle.setText(fileName.replaceFirst("\\.\\w+$", "")); // Removes file extension for display
            cards = fileContent.toString().split("-------------------------"); // Split the cards
            currentCardIndex = 0;

            if (cards.length > 0) {
                loadCardContent(cards[currentCardIndex]); // Load the first card
            }

            // Console-based feedback
            System.out.println("Flashcards loaded successfully!");

        } catch (IOException e) {
            // Console-based error handling
            System.err.println("Error reading the file: " + e.getMessage());
        }
    } else {
        // User canceled file selection
        System.out.println("File selection was canceled.");
    }
    }//GEN-LAST:event_chooseSetBtnActionPerformed

    private String originalQuestion;
    private String originalAnswer;
    private String originalDifficulty;
    private void loadCardContent(String card) {
    card = card.trim(); // Clean up extra spaces/newlines
    String difficulty = extractField(card, "Difficulty:");
    String question = extractField(card, "Question:");
    String answer = extractField(card, "Answer:");

    
    originalQuestion = question;
    originalAnswer = answer;
    originalDifficulty = difficulty;
    // Populate the fields
    displayDifficulty.setText(difficulty);
    displayQuestion.setText(question);
    displayAnswer.setText(answer);
}

    
    // Helper method to extract a field from the card based on a label
    private String extractField(String card, String label) {
    int startIndex = card.indexOf(label);
        if (startIndex != -1) {
            int endIndex = card.indexOf("\n", startIndex);  // Find the end of the field
            if (endIndex == -1) {
                endIndex = card.length();  // If it's the last field, take till the end
        }
        return card.substring(startIndex + label.length(), endIndex).trim();  // Extract the value
    }
    return "";  // Return empty string if the field is not found
}
    
    private void editSetTitleBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editSetTitleBtnActionPerformed
        String userInput = jOptionPane2.showInputDialog(this, "Enter your deck title:", "Input Dialog", jOptionPane2.QUESTION_MESSAGE);

    // Check if the user clicked 'Cancel' (userInput will be null) or entered a text
    if (userInput != null && !userInput.trim().isEmpty()) {
        // Set the user input as the text of displayDeckTitle (assuming it's a JTextField)
        displayTitle.setText(userInput);
    } else {
        // Handle the case when the user cancels or doesn't enter anything
        System.out.println("User canceled the input or entered empty text.");
    }                                            
    }//GEN-LAST:event_editSetTitleBtnActionPerformed

    private void editQuestionBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editQuestionBtnActionPerformed
         String userInput = jOptionPane2.showInputDialog(this, "Enter Question:", "Input Dialog", jOptionPane2.QUESTION_MESSAGE);

    // Check if the user clicked 'Cancel' (userInput will be null) or entered a text
    if (userInput != null && !userInput.trim().isEmpty()) {
        // Set the user input as the text of displayDeckTitle (assuming it's a JTextField)
        displayQuestion.setText(userInput);
    } else {
        // Handle the case when the user cancels or doesn't enter anything
        System.out.println("User canceled the input or entered empty text.");
    }
    }                                            

    private void nextCardBtn3ActionPerformed(java.awt.event.ActionEvent evt) {                                             
       String userInput = jOptionPane2.showInputDialog(this, "Enter Answer:", "Input Dialog", jOptionPane2.QUESTION_MESSAGE);

    // Check if the user clicked 'Cancel' (userInput will be null) or entered a text
        if (userInput != null && !userInput.trim().isEmpty()) {
        // Set the user input as the text of displayDeckTitle (assuming it's a JTextField)
           displayAnswer.setText(userInput);
    } else {
        // Handle the case when the user cancels or doesn't enter anything
        System.out.println("User canceled the input or entered empty text.");
    }
    }//GEN-LAST:event_editQuestionBtnActionPerformed

    private void saveEditsBTnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveEditsBTnActionPerformed
                                
    // Get the edited question, answer, and difficulty from the text fields
    String editedQuestion = displayQuestion.getText().trim();
    String editedAnswer = displayAnswer.getText().trim();
    String editedDifficulty = displayDifficulty.getText().trim();
    String updatedTitle = displayTitle.getText().trim(); // Get the updated title

    if (cards != null && cards.length > 0 && currentCardIndex >= 0 && currentCardIndex < cards.length && selectedFile != null) {
        // Update the current flashcard's content
        String updatedCard = "Difficulty: " + editedDifficulty + "\n" +
                             "Question: " + editedQuestion + "\n" +
                             "Answer: " + editedAnswer + "\n";
        cards[currentCardIndex] = updatedCard.trim(); // Update the cards array

        // Update the file name if the title has changed
        File parentFolder = selectedFile.getParentFile(); // Get the parent folder of the file
        File updatedFile = new File(parentFolder, updatedTitle + ".txt"); // Create a file with the new title

        if (!updatedFile.equals(selectedFile)) { // Check if the file name has actually changed
            if (selectedFile.renameTo(updatedFile)) {
                selectedFile = updatedFile; // Update the reference to the selected file
                System.out.println("File name updated to: " + updatedFile.getName());
            } else {
                jOptionPane2.showMessageDialog(null, "Failed to rename the file. Ensure the file isn't open elsewhere.");
                return;
            }
        }

        try (BufferedWriter writer = new BufferedWriter(new FileWriter(selectedFile, false))) { // Overwrite mode
            // Write updated cards to the file
            for (String card : cards) {
                card = card.trim(); // Clean up each card
                if (!card.isEmpty()) { // Skip empty cards
                    writer.write(card);
                    writer.write("\n-------------------------\n"); // Add separator
                }
            }

            jOptionPane2.showMessageDialog(null, "Flashcard updated successfully!");
        } catch (IOException e) {
            jOptionPane2.showMessageDialog(null, "Error updating the file: " + e.getMessage());
        }
    } else {
        jOptionPane2.showMessageDialog(null, "No card selected or invalid card.");
    }
    }//GEN-LAST:event_saveEditsBTnActionPerformed

    
    private String updateCardContent(String currentCard, String editedQuestion, String editedAnswer, String editedDifficulty) {
    // Update the content of the current card by replacing the question and answer
    String updatedCard =    "Difficulty" + editedDifficulty +
                            "Question: " + editedQuestion + "\n" +
                            "Answer: " + editedAnswer + "\n";
                         
    return updatedCard;
}
    
    private void backFlashcardsBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backFlashcardsBtnActionPerformed
        // TODO add your handling code here:
        FlashcardsPage flashcard = new FlashcardsPage();
        flashcard.setVisible(true);
        setVisible(false);
    }//GEN-LAST:event_backFlashcardsBtnActionPerformed

    private void finishSetBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_finishSetBtnActionPerformed
    // Show a message dialog that editing is finished
    jOptionPane2.showMessageDialog(null, "Editing finished!");

    // Clear the text fields (assuming these are JTextFields for the question, answer, and difficulty)
    displayTitle.setText("");  // Clear title field
    displayQuestion.setText("");  // Clear question field
    displayAnswer.setText("");  // Clear answer field
    displayDifficulty.setText("");  // Clear difficulty field

    // Optionally, you could reset the current card index to 0 if you want to start from the first card again
    currentCardIndex = 0;  
    }//GEN-LAST:event_finishSetBtnActionPerformed

    private void logOutBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_logOutBtnActionPerformed
    // Show a confirmation dialog
    int choice = javax.swing.JOptionPane.showConfirmDialog(
        this, 
        "Confirm LogOut?", 
        "Log Out", 
        javax.swing.JOptionPane.YES_NO_OPTION
    );

    if (choice == javax.swing.JOptionPane.YES_OPTION) {
        // Redirect to the login page
        Login loginPage = new Login();
        loginPage.setVisible(true);
        this.dispose(); // Close the current window
    } else {
        // Do nothing; close the dialog automatically
        System.out.println("Log out canceled.");
    }
    }//GEN-LAST:event_logOutBtnActionPerformed

    private void logOutIcon1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_logOutIcon1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_logOutIcon1ActionPerformed

    private void editAnswerBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editAnswerBtnActionPerformed
        String userInput = jOptionPane2.showInputDialog(this, "Enter Answer:", "Input Dialog", jOptionPane2.QUESTION_MESSAGE);

    // Check if the user clicked 'Cancel' (userInput will be null) or entered a text
    if (userInput != null && !userInput.trim().isEmpty()) {
        // Set the user input as the text of displayDeckTitle (assuming it's a JTextField)
        displayAnswer.setText(userInput);
    } else {
        // Handle the case when the user cancels or doesn't enter anything
        System.out.println("User canceled the input or entered empty text.");
    }
    }//GEN-LAST:event_editAnswerBtnActionPerformed

    private void editNextCardBtn1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editNextCardBtn1ActionPerformed
    if (cards != null && currentCardIndex > 0) {
        currentCardIndex--; // Move to the previous card
        loadCardContent(cards[currentCardIndex]); // Load the previous card
    } else {
        jOptionPane2.showMessageDialog(null, "You are at the first card.");
    }
    }//GEN-LAST:event_editNextCardBtn1ActionPerformed

    private void editDifficultyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editDifficultyActionPerformed
    // Define the options for the dialog
    String[] options = {"Easy", "Moderate", "Difficult"};

        // Show the option dialog and capture the user's choice
        int choice = jOptionPane2.showOptionDialog(
            this, // Parent component
            "Select the difficulty level:", // Message
            "Set Difficulty", // Title
            jOptionPane2.DEFAULT_OPTION, // Option type
            jOptionPane2.INFORMATION_MESSAGE, // Message type
            null, // Icon (null for default)
            options, // Options array
            options[0] // Default option
        );

        // Check the user's choice and set the text in displayDifficulty JTextField
        if (choice == 0) { // Easy selected
            displayDifficulty.setText("Easy");
        } else if (choice == 1) { // Moderate selected
            displayDifficulty.setText("Moderate");
        } else if (choice == 2) { // Difficult selected
            displayDifficulty.setText("Difficult");
        }

    }//GEN-LAST:event_editDifficultyActionPerformed

    private void displayDifficultyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_displayDifficultyActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_displayDifficultyActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(editSetPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(editSetPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(editSetPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(editSetPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new editSetPage().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel addNewSetPanel;
    private javax.swing.JButton backFlashcardsBtn;
    private javax.swing.JPanel backgroundPanel;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JButton chooseSetBtn;
    private javax.swing.JButton discardEditsBTn;
    private javax.swing.JTextField displayAnswer;
    private javax.swing.JTextField displayDifficulty;
    private javax.swing.JTextField displayQuestion;
    private javax.swing.JTextField displayTitle;
    private javax.swing.JButton editAnswerBtn;
    private javax.swing.JButton editDifficulty;
    private javax.swing.JButton editNextCardBtn;
    private javax.swing.JButton editNextCardBtn1;
    private javax.swing.JButton editQuestionBtn;
    private javax.swing.JPanel editSetHeaderPanel;
    private javax.swing.JTextField editSetLabel;
    private javax.swing.JButton editSetTitleBtn;
    private javax.swing.JButton finishSetBtn;
    private javax.swing.JButton flashcardsBtn;
    private javax.swing.JButton flashcardsIcon;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JOptionPane jOptionPane2;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JButton logOutBtn;
    private javax.swing.JButton logOutIcon;
    private javax.swing.JButton logOutIcon1;
    private javax.swing.JButton overviewBtn;
    private javax.swing.JButton overviewIcon;
    private javax.swing.JButton profileBtn;
    private javax.swing.JButton profileIcon;
    private javax.swing.JButton saveEditsBTn;
    private javax.swing.JPanel sidebarPanel;
    private javax.swing.JButton studyBtn;
    // End of variables declaration//GEN-END:variables
}
